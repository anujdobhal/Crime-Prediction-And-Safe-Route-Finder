<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Safe Route Finder</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-blue: #3498db;
            --dark-blue: #2980b9;
            --light-gray: #f5f7fa;
            --medium-gray: #e0e5ec;
            --dark-gray: #7f8c8d;
            --text-color: #2c3e50;
            --shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #bbdefb);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            color: var(--text-color);
        }

        .container {
            width: 100%;
            max-width: 800px;
        }

        .route-card {
            background: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: var(--shadow);
        }

        .form-section {
            padding: 40px;
        }

        .app-title {
            font-size: 2.2rem;
            margin-bottom: 10px;
            color: var(--primary-blue);
            font-weight: 600;
        }

        .app-tagline {
            font-size: 1rem;
            color: var(--dark-gray);
            margin-bottom: 30px;
            font-weight: 400;
        }

        .route-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .input-group {
            position: relative;
        }

        .input-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--primary-blue);
        }

        .form-input {
            width: 100%;
            padding: 15px 15px 15px 45px;
            border: 2px solid var(--medium-gray);
            border-radius: 10px;
            font-size: 1rem;
            transition: var(--transition);
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .form-input::placeholder {
            color: var(--dark-gray);
            opacity: 0.7;
        }

        .submit-btn {
            background: var(--primary-blue);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            margin-top: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .submit-btn:hover {
            background: var(--dark-blue);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(41, 128, 185, 0.3);
        }

        .error-message {
            color: #e74c3c;
            font-size: 0.85rem;
            margin-top: 5px;
            text-align: left;
            padding-left: 10px;
            display: none;
        }

        .map-section {
            height: 400px;
            background: #e0e5ec;
            position: relative;
        }

        #map {
            width: 100%;
            height: 100%;
        }

        .route-info {
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            position: absolute;
            bottom: 20px;
            left: 20px;
            z-index: 1000;
            box-shadow: var(--shadow);
            max-width: 300px;
        }

        .route-info h3 {
            margin-bottom: 10px;
            color: var(--primary-blue);
        }

        .route-info p {
            margin-bottom: 5px;
            font-size: 0.9rem;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .app-title {
                font-size: 1.8rem;
            }
            
            .form-section {
                padding: 30px;
            }
            
            .map-section {
                height: 350px;
            }
        }

        @media (max-width: 480px) {
            .app-title {
                font-size: 1.5rem;
            }
            
            .form-section {
                padding: 25px;
            }
            
            .form-input {
                padding: 12px 12px 12px 40px;
            }
            
            .map-section {
                height: 300px;
            }
            
            .route-info {
                max-width: 200px;
                padding: 15px;
                bottom: 10px;
                left: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="route-card">
            <div class="form-section">
                <h1 class="app-title">Find the Safest Route</h1>
                <p class="app-tagline">Plan your journey with safety in mind</p>
                
                <form class="route-form" id="routeForm">
                    <div class="input-group">
                        <i class="fas fa-map-marker-alt input-icon"></i>
                        <input type="text" 
                               class="form-input" 
                               id="sourceCity" 
                               placeholder="Enter source city or address...">
                        <div class="error-message" id="sourceError">Please enter a source location</div>
                    </div>
                    
                    <div class="input-group">
                        <i class="fas fa-flag-checkered input-icon"></i>
                        <input type="text" 
                               class="form-input" 
                               id="destinationCity" 
                               placeholder="Enter destination city or address...">
                        <div class="error-message" id="destinationError">Please enter a destination location</div>
                    </div>
                    
                    <button type="submit" class="submit-btn" >
                        <i class="fas fa-route"></i>
                        Find Safest Route
                    </button>
                </form>
            </div>
            
            <div class="map-section">
                <div id="map"></div>
                <div class="route-info" id="routeInfo" style="display: none;">
                    <h3>Route Information</h3>
                    <p><strong>Distance:</strong> <span id="routeDistance">-</span></p>
                    <p><strong>Duration:</strong> <span id="routeDuration">-</span></p>
                    <p><strong>Safety Score:</strong> <span id="safetyScore">-</span></p>
                </div>
            </div>
        </div>
    </div>

    <script>
    let map, map2,directionsService, directionsRenderer,directionsRenderer2;
    
    function initMap() {
        const center = { lat: 30.2870, lng: 77.9983 };

        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 12,
            center: center,
        });

        directionsService = new google.maps.DirectionsService();

        directionsRenderer = new google.maps.DirectionsRenderer({
            polylineOptions: { strokeColor: "blue", strokeWeight: 6 }
        });

        directionsRenderer2 = new google.maps.DirectionsRenderer({
            polylineOptions: { strokeColor: "red", strokeWeight: 4 }
        });

        directionsRenderer.setMap(map);
        directionsRenderer2.setMap(map);
    }


    function calculateRoute(event) {
        event.preventDefault();

        const start = document.getElementById("sourceCity").value;
        const end = document.getElementById("destinationCity").value;

        if (!start || !end) {
            document.getElementById("sourceError").style.display = !start ? "block" : "none";
            document.getElementById("destinationError").style.display = !end ? "block" : "none";
            return;
        }

        const request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.DRIVING,
            provideRouteAlternatives: true
        };

        directionsService.route(request, (result, status) => {
            if (status === "OK") {
                const route1 = result.routes[0];
                const route2 = result.routes[1];

                const fakeResult1 = Object.assign({}, result, { routes: [route1] });
                const fakeResult2 = route2 ? Object.assign({}, result, { routes: [route2] }) : null;

                const decodePolyline = (polyline) => {
                    const decodedPoints = google.maps.geometry.encoding.decodePath(polyline);
                    return decodedPoints.map(point => ({
                        lat: point.lat(),
                        lng: point.lng()
                    }));
                };

                const coordinates1 = decodePolyline(route1.overview_polyline);

                // First, check score of route1 only
                fetch('/process-coords', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ coordinates: coordinates1 }),
                })
                .then(response => response.json())
                .then(data => {
                    const score1 = data.result;
                    let leg = route1.legs[0];

                    if (score1 <50 ) {
                        directionsRenderer.setDirections(fakeResult1);
                    } else if(fakeResult2){
                        
                        const coordinates2 = decodePolyline(route2.overview_polyline);

                        fetch('/process-coords', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ coordinates: coordinates2 }),
                        })
                        .then(res => res.json())
                        .then(data2 => {
                            const score2 = data2.result;
                            leg = score2 < score1 ? route2.legs[0] : route1.legs[0];

                            directionsRenderer.setDirections(fakeResult1);
                            directionsRenderer2.setDirections(fakeResult2);
                            

                            document.getElementById("safetyScore").textContent = `Route 1(Blue): ${score1}% | Route 2(Red): ${score2}%`;
                        })
                        .catch(err => {
                            console.error("Error fetching second route score:", err);
                            directionsRenderer2.setDirections(fakeResult1);
                        });
                    }else{
                        alert("Only one route Found!!");
                        directionsRenderer2.setDirections(fakeResult1);
                    }

                    // Display basic info (we may override later in second route comparison)
                    document.getElementById("routeDistance").textContent = leg.distance.text;
                    document.getElementById("routeDuration").textContent = leg.duration.text;
                    document.getElementById("safetyScore").textContent = score1+'%';
                    document.getElementById("routeInfo").style.display = "block";
                })
                .catch(error => {
                    console.error('Error:', error);
                });

            } else {
                alert("Could not find route: " + status);
            }
        });

    }


    window.initMap = initMap;
    document.getElementById("routeForm").addEventListener("submit", calculateRoute);

  </script>
  <script
      src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap&libraries=visualization"
      async
      defer
    ></script>
</body>
</html>